#include<cstdio>
//You have n super washing machines on a line. Initially, each washing machine has some dresses or is empty.

//For each move, you could choose any m (1 ? m ? n) washing machines, and pass one dress of each washing machine to one of its adjacent washing machines at the same time .

//Given an integer array representing the number of dresses in each washing machine from left to right on the line, you should find the minimum number of moves to make all the washing machines have the same number of dresses. If it is not possible to do it, return -1.

//Example1

//Input: [1,0,5]

//Output: 3

//Explanation: 
//1st move:    1     0 <-- 5    =>    1     1     4
//2nd move:    1 <-- 1 <-- 4    =>    2     1     3    
//3rd move:    2     1 <-- 3    =>    2     2     2   
//Example2

//Input: [0,3,0]

//Output: 2

//Explanation: 
//1st move:    0 <-- 3     0    =>    1     2     0    
//2nd move:    1     2 --> 0    =>    1     1     1     
//Example3

//Input: [0,2,0]

//Output: -1

//Explanation: 
//It's impossible to make all the three washing machines have the same number of dresses.

int findMinMoves(int* machines, int machinesSize) {
    int too1 = 0;
    int totalnumberofdresses = 0;
    int number,i;
    for(int temp = 0;temp < machinesSize;temp++){
        totalnumberofdresses = totalnumberofdresses + machines[temp];
    }
    if(totalnumberofdresses % 3 != 0){
        return -1;
    } else {
    	while(1){
    		number = machines[0];
    		i = 0;
    		for(int temp = 0;temp < machinesSize;temp++){
    			if(machines[temp] != number){
    				i++;
    			}
    		}
    		if(i == 0){
    			break;
    		}
    		for(int temp = 0;temp < machinesSize;temp++){
	        	if(temp == 0){
	        		if(machines[temp+1]<machines[temp] && machines[temp+2] <= machines[temp]){
	        			machines[temp]--;
	        			machines[temp+1]++;
	        		}
	        	} else if(temp == 1){
	        		if(machines[temp+1]<machines[temp] && machines[temp+2] <= machines[temp]){
	        			machines[temp]--;
	        			machines[temp+1]++;
	        		} else if(machines[temp-1] < machines[temp]){
	        			machines[temp]--;
	        			machines[temp-1]++;
	        		}	
	        	} else if(temp == machinesSize -1){
	        		if(machines[temp-1]<machines[temp] && machines[temp-2] <= machines[temp]){
	        			machines[temp]--;
	        			machines[temp-1]++;
	        		}
	        	} else if(temp == machinesSize -2){
	        		if(machines[temp-1]<machines[temp] && machines[temp-2] <= machines[temp]){
	        			machines[temp]--;
	        			machines[temp-1]++;
	        		} else if(machines[temp+1] < machines[temp]){
	        			machines[temp]--;
	        			machines[temp+1]++;
	        		}
	        	} else {
	        		if(machines[temp-1]<machines[temp] && machines[temp-2] <= machines[temp]){
	        			machines[temp]--;
	        			machines[temp-1]++;
	        		}
	        		if(machines[temp+1]<machines[temp] && machines[temp+2] <= machines[temp]){
	        			machines[temp]--;
	        			machines[temp+1]++;
	        		}
	        	}
	        }
	        too1++;
    	}
        return too1;
    }
}
main(){
	int machinesSize,too;
	printf("How many machines: ");
	scanf("%d",&machinesSize);
	int machine[machinesSize];
	int *machines;
	machines = &machine[machinesSize];
	printf("Number of dresses in each wahing machine:");
	for(int temp = 0;temp < machinesSize;temp++){
		scanf(" %d",machines+temp);
	}
    too = findMinMoves(machines,machinesSize);
    printf("%d",too);
}
